[33mcommit 2517d5f83f5cfb3a45cf7fd1eb6f0834ee39edd2[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: Aleksa Kovacevic <aleksakovacevicc@gmail.com>
Date:   Sun Jan 7 15:11:45 2024 +0100

    API

[1mdiff --git a/app/src/main/java/com/example/myapplication/MainActivity.kt b/app/src/main/java/com/example/myapplication/MainActivity.kt[m
[1mindex ce0adf5..87b039b 100644[m
[1m--- a/app/src/main/java/com/example/myapplication/MainActivity.kt[m
[1m+++ b/app/src/main/java/com/example/myapplication/MainActivity.kt[m
[36m@@ -6,94 +6,86 @@[m [mimport android.os.Bundle[m
 import android.util.Log[m
 import androidx.recyclerview.widget.LinearLayoutManager[m
 import androidx.recyclerview.widget.RecyclerView[m
[31m-import okhttp3.Call[m
[31m-import okhttp3.Callback[m
[32m+[m[32mimport kotlinx.coroutines.*[m
 import okhttp3.OkHttpClient[m
 import okhttp3.Request[m
[31m-import okhttp3.Response[m
 import java.io.IOException[m
 [m
 class MainActivity : AppCompatActivity() {[m
 [m
[32m+[m[32m    private lateinit var recyclerView: RecyclerView[m
[32m+[m[32m    private lateinit var foodList: ArrayList<Food>[m
[32m+[m[32m    private lateinit var foodAdapter: FoodAdapter[m
 [m
[31m-[m
[31m-[m
[31m-    var responseData: String? = null[m
[31m-    private lateinit var recycleView: RecyclerView[m
[31m-    private lateinit var foodList : ArrayList<Food>[m
[31m-    private lateinit var foodAdapter : FoodAdapter[m
[31m-[m
[31m-[m
[32m+[m[32m    companion object {[m
[32m+[m[32m        private const val BASE_URL = "https://api.api-ninjas.com/v1/nutrition?query="[m
[32m+[m[32m        private const val API_KEY = "ePjBXaX16JtfTmvEuNmgMA==ZOuYxeSINJjBeLXA"[m
[32m+[m[32m    }[m
 [m
     override fun onCreate(savedInstanceState: Bundle?) {[m
         super.onCreate(savedInstanceState)[m
         setContentView(R.layout.activity_main)[m
 [m
[31m-[m
[31m-[m
[31m-        recycleView = findViewById(R.id.recyclerView)[m
[31m-        recycleView.setHasFixedSize(true)[m
[31m-        recycleView.layoutManager = LinearLayoutManager(this)[m
[32m+[m[32m        recyclerView = findViewById(R.id.recyclerView)[m
[32m+[m[32m        recyclerView.setHasFixedSize(true)[m
[32m+[m[32m        recyclerView.layoutManager = LinearLayoutManager(this)[m
 [m
         foodList = ArrayList()[m
 [m
[31m-        foodList.add(Food(R.drawable.jabuka, "Jabuka",responseData ?: "NotFound"))[m
[31m-        foodList.add(Food(R.drawable.banana, "Banana",responseData ?: "NotFound"))[m
[31m-        foodList.add(Food(R.drawable.limun,"Limun",responseData ?: "NotFound"))[m
[31m-        foodList.add(Food(R.drawable.lubenica,"Lubenica",responseData ?: "NotFound"))[m
[31m-        foodList.add(Food(R.drawable.jagoda,"Jagoda",responseData ?: "NotFound"))[m
[31m-        foodList.add(Food(R.drawable.ananas,"Ananas",responseData ?: "NotFound"))[m
[32m+[m[32m        foodList.add(Food(R.drawable.jabuka, "Jabuka"))[m
[32m+[m[32m        foodList.add(Food(R.drawable.banana, "Banana"))[m
[32m+[m[32m        foodList.add(Food(R.drawable.limun, "Limun"))[m
[32m+[m[32m        foodList.add(Food(R.drawable.lubenica, "Lubenica"))[m
[32m+[m[32m        foodList.add(Food(R.drawable.jagoda, "Jagoda"))[m
[32m+[m[32m        foodList.add(Food(R.drawable.ananas, "Ananas"))[m
 [m
         foodAdapter = FoodAdapter(foodList)[m
[31m-        recycleView.adapter = foodAdapter[m
[31m-[m
[31m-[m
[32m+[m[32m        recyclerView.adapter = foodAdapter[m
 [m
         foodAdapter.onItemClick = {[m
[31m-            val intent = Intent(this ,DetailedActivity::class.java)[m
[32m+[m[32m            val intent = Intent(this, DetailedActivity::class.java)[m
             intent.putExtra("food", it)[m
[31m-            intent.putExtra("apidata", it.apidata)  // Dodajte podatke iz API-ja[m
[32m+[m[32m            intent.putExtra("apidata", it.apidata)[m
             startActivity(intent)[m
         }[m
 [m
[31m-        // Make the network request asynchronously[m
[31m-        fetchData()[m
[31m-[m
[32m+[m[32m        // Use a coroutine to fetch data for each food item[m
[32m+[m[32m        CoroutineScope(Dispatchers.Main).launch {[m
[32m+[m[32m            fetchData("apple", 0)[m
[32m+[m[32m            fetchData("banana", 1)[m
[32m+[m[32m            fetchData("lemon", 2)[m
[32m+[m[32m            fetchData("watermelon", 3)[m
[32m+[m[32m            fetchData("strawberry", 4)[m
[32m+[m[32m            fetchData("pineapple", 5)[m
[32m+[m[32m        }[m
     }[m
 [m
[31m-    private fun fetchData() {[m
[32m+[m[32m    private suspend fun fetchData(query: String, index: Int) {[m
         val client = OkHttpClient()[m
[31m-        // Novi API link i kljuƒç[m
[31m-        val url = "https://api.api-ninjas.com/v1/nutrition?query=1lb brisket and fries"[m
[31m-        val apiKey = "ePjBXaX16JtfTmvEuNmgMA==ZOuYxeSINJjBeLXA"[m
[31m-[m
[32m+[m[32m        val url = "$BASE_URL$query"[m
         val request = Request.Builder()[m
             .url(url)[m
[31m-            .addHeader("x-api-key", apiKey)  // Dodajte kljuƒç kao zaglavlje zahteva[m
[32m+[m[32m            .addHeader("x-api-key", API_KEY)[m
             .build()[m
 [m
[31m-        client.newCall(request).enqueue(object : Callback {[m
[31m-            override fun onFailure(call: Call, e: IOException) {[m
[31m-                e.printStackTrace()[m
[31m-                Log.e("MainActivity", "Poziv nije uspio", e)[m
[31m-            }[m
[32m+[m[32m        withContext(Dispatchers.IO) {[m
[32m+[m[32m            try {[m
[32m+[m[32m                val response = client.newCall(request).execute()[m
 [m
[31m-            override fun onResponse(call: Call, response: Response) {[m
[31m-                if (response.isSuccessful) {[m
[31m-                    runOnUiThread {[m
[31m-                        responseData = response.body?.string()[m
[31m-                        Log.d("MainActivity", "Odgovor je uspe≈°an: $responseData")[m
[31m-[m
[31m-                        for (food in foodList) {[m
[31m-                            food.apidata = responseData ?: ""[m
[31m-                        }[m
[31m-[m
[31m-                        // Obavesti adapter da su podaci promenjeni[m
[31m-                        foodAdapter.notifyDataSetChanged()[m
[32m+[m[32m                response.use {[m
[32m+[m[32m                    val responseData = it.body?.string()[m
[32m+[m[32m                    Log.d("MainActivity", "Response successful: $responseData")[m
 [m
[32m+[m[32m                    // Set the response data for the correct food item[m
[32m+[m[32m                    foodList[index].apidata = responseData ?: "NotFound"[m
[32m+[m[32m                    withContext(Dispatchers.Main) {[m
[32m+[m[32m                        foodAdapter.notifyItemChanged(index)[m
                     }[m
                 }[m
[32m+[m[32m            } catch (e: IOException) {[m
[32m+[m[32m                e.printStackTrace()[m
[32m+[m[32m                Log.e("MainActivity", "API call failed", e)[m
             }[m
[31m-        })[m
[32m+[m[32m        }[m
     }[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m}[m
